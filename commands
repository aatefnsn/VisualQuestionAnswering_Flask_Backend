python3 -m streamlit run main.py



"""
def app_sst(model_path: str, lm_path: str, lm_alpha: float, lm_beta: float, beam: int):
    webrtc_ctx = webrtc_streamer(
        key="speech-to-text",
        mode=WebRtcMode.SENDONLY,
        audio_receiver_size=1024,
        rtc_configuration={"iceServers": [{"urls": ["stun:stun.l.google.com:19302"]}]},
        media_stream_constraints={"video": False, "audio": True},
    )

    status_indicator = st.empty()

    if not webrtc_ctx.state.playing:
        return

    status_indicator.write("Loading...")
    text_output = st.empty()
    stream = None

    while True:
        if webrtc_ctx.audio_receiver:
            if stream is None:


                model = Model(model_path)
                model.enableExternalScorer(lm_path)
                model.setScorerAlphaBeta(lm_alpha, lm_beta)
                model.setBeamWidth(beam)

                stream = model.createStream()

                status_indicator.write("Model loaded.")

            sound_chunk = pydub.AudioSegment.empty()
            try:
                audio_frames = webrtc_ctx.audio_receiver.get_frames(timeout=1)
            except queue.Empty:
                time.sleep(0.1)
                status_indicator.write("No frame arrived.")
                continue

            status_indicator.write("Running. Say something!")

            for audio_frame in audio_frames:
                sound = pydub.AudioSegment(
                    data=audio_frame.to_ndarray().tobytes(),
                    sample_width=audio_frame.format.bytes,
                    frame_rate=audio_frame.sample_rate,
                    channels=len(audio_frame.layout.channels),
                )
                sound_chunk += sound

            if len(sound_chunk) > 0:
                sound_chunk = sound_chunk.set_channels(1).set_frame_rate(
                    model.sampleRate()
                )
                buffer = np.array(sound_chunk.get_array_of_samples())
                stream.feedAudioContent(buffer)
                text = stream.intermediateDecode()
                text_output.markdown(f"**Text:** {text}")
        else:
            status_indicator.write("AudioReciver is not set. Abort.")
            break

lm_alpha = 0.931289039105002
lm_beta = 1.1834137581510284
beam = 100
MODEL_URL = "https://github.com/mozilla/DeepSpeech/releases/download/v0.9.3/deepspeech-0.9.3-models.pbmm"  # noqa
LANG_MODEL_URL = "https://github.com/mozilla/DeepSpeech/releases/download/v0.9.3/deepspeech-0.9.3-models.scorer"  # noqa
MODEL_LOCAL_PATH = "./deepspeech-0.9.3-models.pbmm"
LANG_MODEL_LOCAL_PATH = "./deepspeech-0.9.3-models.scorer"
app_sst(str(MODEL_LOCAL_PATH), str(LANG_MODEL_LOCAL_PATH), lm_alpha, lm_beta, beam)
"""



"""
user_input = st.text_input("Please type in the question followed by a question mark '?'")

if st.button('Get me an Answer'):
    result = requests.post("https://predict-mpfalbvdhq-uw.a.run.app/predict", files={'file': open(image_file.name,'rb')}, data = {'question': user_input})
    result = result.text
    #print(result)
    #st.write('result: %s' % result)
    st.write(result)
    #st.write(json.dumps(result))
"""


wavio
sounddevice
librosa
global
whisper
ffmpeg-1.4
pyautogui
streamlit_webrtc
pydub
deepspeech
numpy==1.20.3
aiortc.contrib.media
pip3 install opencv-python

gcloud config set project streamlit-app-4
gcloud config set app/cloud_build_timeout 9000
gcloud app deploy
gcloud builds submit --tag gcr.io/vqa-flask/predict
gcloud run deploy --image gcr.io/vqa-flask/predict --platform managed


ahmed_nada@Ahmeds-MacBook-Pro vqa-streamlit % $path
zsh: permission denied: /Users/ahmed_nada/.rvm/gems/ruby-2.7.2/bin
ahmed_nada@Ahmeds-MacBook-Pro vqa-streamlit % $PATH
zsh: no such file or directory: /Users/ahmed_nada/.rvm/gems/ruby-2.7.2/bin:/Users/ahmed_nada/.rvm/gems/ruby-2.7.2@global/bin:/Users/ahmed_nada/.rvm/rubies/ruby-2.7.2/bin:/Users/ahmed_nada/Downloads/google-cloud-sdk/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/Users/ahmed_nada/.rvm
